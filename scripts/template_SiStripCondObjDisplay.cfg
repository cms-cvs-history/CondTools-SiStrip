process TEST = {
    
    
    service = MessageLogger
    {
	untracked vstring destinations =  {"cout"}
	untracked PSet cout   =  { untracked string threshold = "INFO" }
	untracked vstring debugModules =  { "Display" }                                       
    }
    
    #++++++++++++
    #Geometry
    #++++++++++++
    
    #geom_mtcc	
#MTCC    include "Geometry/CMSCommonData/data/cmsMTCCGeometryXML.cfi"
    
    #geom_ideal	
#TAC    include "Geometry/CMSCommonData/data/cmsIdealGeometryXML.cfi"
    
    #+++++++++++++++++++++++++++++++
    
    es_module = TrackerGeometricDetESModule {}
    es_module = TrackerDigiGeometryESModule {}
            
    es_source = PoolDBESSource { 
	VPSet toGet = {{ string record = "SiStripPedestalsRcd" string tag = "insert_tagPN_p" }, { string record = "SiStripNoisesRcd" string tag = "insert_tagPN_n" }, { string record = "SiStripFedCablingRcd" string tag = "insert_tagCab" }}
	
	string connect = "insert_DBfile"
	#
	string timetype = "runnumber" 
	untracked string BlobStreamerName="DefaultBlobStreamingService"
	PSet DBParameters = {
	    untracked string authenticationPath="/afs/cern.ch/cms/DB/conddb"
	    untracked int32 messageLevel=2
	}
    }
    
    
    # produce SiStripFecCabling and SiStripDetCabling out of SiStripFedCabling
    es_module sistripconn = SiStripConnectivity {}
        
    source = EmptySource {
	untracked int32 maxEvents = 1
	untracked uint32 firstRun = insert_runNb 
	untracked uint32 numberEventsInRun = 1
    }
    
    
    module Display =  SiStripCondObjDisplay {
	bool UseCalibDataFromDB = true
		
        double ElectronPerAdc      = 313.0 
        double EquivalentNoiseCharge300um = 2160.
        double BadStripProbability = 0.0
        uint32  PedestalValue      = 30
        double  LowThValue         =  2
        double  HighThValue        =  5
	
	string fileName = "insert_output_filename"
	string psfileName = "insert_ps_filename"
	int32 psfiletype = 131		
	
	PSet TH1Noises = {
	    int32 Nbinx =  50	
	    double xmin =   0.
	    double xmax =  10.
	}	
	PSet TH1BadStrips = {
	    int32 Nbinx =  2	
	    double xmin = -0.5
	    double xmax =  1.5
	}	
    }
    
    module AsciiOutput = AsciiOutputModule {}
    
    path p = { Display }
    endpath e = { AsciiOutput } 
}

