process OFFPEDNOISE = {
    
    block PedestalsBlock  = { 
	untracked string containerName = "SiStripPedestals" 
	string tag = "insert_tagPN_p" 
	untracked bool appendIOV = insert_appendflag
    }
    
    block NoisesBlock     = { 
	untracked string containerName = "SiStripNoises" 
	string tag ="insert_tagPN_n" 
	untracked bool appendIOV = insert_appendflag
    }
    
    block PoolDBBlock     = {
	string connect = "insert_DBfile"    
	untracked string catalog = "insert_DBcatalog"
	string timetype = "runnumber"    
	untracked bool loadBlobStreamer = true
	untracked uint32 authenticationMethod = 1
	untracked uint32 messagelevel = 2 
    }
    
    
    block PoolDBESSourceBlock = { 
	using PoolDBBlock
	bool loadAll = true		
	VPSet toGet = {{ string record = "SiStripPedestalsRcd" string tag = "insert_tagPN_p" }, { string record = "SiStripNoisesRcd" string tag = "insert_tagPN_n" }}
    }
    
    # MessageLogger
 #   include "FWCore/MessageService/data/MessageLogger.cfi"
    service = MessageLogger{
 	untracked vstring destinations =  {"cout"}
  	untracked PSet cout   =  {
  	    untracked string threshold = "INFO"
#  	    untracked PSet default = { untracked int32 limit = 1000 }
  	}	
# 	untracked vstring debugModules    = {"SiStripOfflinePedNoiseToDb", "siStripOfflinePedNoiseToDb"}
# 	untracked vstring suppressDebug   = { "*" }
# # 	untracked vstring suppressInfo    = { }	
# # 	untracked vstring suppressWarning = { }    
      }
    
    #service = Timing { }
    
    #++++++++++++
    #Geometry
    #++++++++++++

    #geom_mtcc
#MTCC    include "Geometry/CMSCommonData/data/cmsMTCCGeometryXML.cfi"

    #geom_ideal
#TAC    include "Geometry/CMSCommonData/data/cmsIdealGeometryXML.cfi"


    service = PoolDBOutputService{	
	using PoolDBBlock		
        VPSet toPut={ {using PedestalsBlock} , {using NoisesBlock} }    
    }
    
    #appendMode_1      	es_source PedNoiseFromDb = PoolDBESSource {using PoolDBESSourceBlock}
    
    es_source CablingFromDb = PoolDBESSource {
	using PoolDBBlock
	VPSet toGet = { { string record = "SiStripFedCablingRcd" string tag = "insert_tagCab" } }
    }
    
    # produce SiStripFecCabling and SiStripDetCabling out of SiStripFedCabling
    es_module sistripconn = SiStripConnectivity {}
    

   source = TBRUInputSource
    {
        untracked vstring fileNames = { insert_input_file_list  } // path and filename of  RU  file
#        untracked int32 maxEvents = -1        // number of events to process (-1 = "all")
        untracked int32 maxEvents = -1        // number of events to process (-1 = "all")
        #untracked int32 nFeds = 1                      // overrides number of found FEDs in "RU" file
    }

    include "EventFilter/SiStripRawToDigi/data/SiStripDigis.cfi"
#    replace SiStripDigis.UseFedKey = false
#    replace SiStripDigis.TriggerFedId = 1023
    
    service = DaqMonitorROOTBackEnd {}

    module siStripOfflinePedNoiseToDb= SiStripOfflinePedNoiseToDb {

	untracked bool  doPedNoiseTansfer    = insert_doPedNoiseTransfer
	untracked bool  appendMode           = insert_appendflag
	untracked uint32 StartIOV             = insert_StartIOV
	
	string DigiProducer="SiStripDigis"
	string DigiType = "VirginRaw"

        PSet PedestalsPSet =
	{	    
	    string CalculatorAlgorithm = "TT6"
	    int32 NumCMstripsInGroup =128
	    int32 MaskCalculationFlag =1
	    double MaskNoiseCut =3.
	    double MaskDeadCut = 0.5
	    double MaskTruncationCut = 0.05
	    double CutToAvoidSignal =3.
	    int32 NumberOfEventsForInit = 500
	    int32 NumberOfEventsForIteration = 200
	}
    }	
    
    path p = { SiStripDigis, siStripOfflinePedNoiseToDb }
    
    module print = AsciiOutputModule {}
    endpath ep = { print }
}
